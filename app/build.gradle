plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
// Put name as beta or alpha, if require
def versionClassifier = null

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.kevcordova.jobsitychallenge"
        minSdk 23
        targetSdk 32
        versionCode formatVersionCode(versionMajor, versionMinor, versionPatch)
        versionName formatVersionName(versionMajor, versionMinor, versionPatch, versionClassifier)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL_TV_MAZE_API", "\"${tv_maze_api}\""
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

android.applicationVariants.all { variant ->
    def appName
    if (project.hasProperty("applicationName")) {
        appName = applicationName
    } else {
        appName = parent.name
    }
    def variantName = variant.name
    def versionName = variant.versionName
    def formattedDate = new Date().format("dd-MM-YYYY")

    variant.outputs.all { output ->
        outputFileName = "${appName}-${versionName}_${formattedDate}_${variantName}.apk"
    }
}

dependencies {
    // Library own
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    // Project dependencies
    implementation project(":domain")
    implementation project(":data")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    def lifecycle_version = "2.5.0-rc02"
    def retrofit_version = "2.9.0"
    def nav_version = "2.3.0-alpha02"

    // Navigation Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //Dagger
    implementation daggerLibrary
    kapt daggerCompiler

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"
    // GSON
    implementation "com.google.code.gson:gson:2.8.9"

    // Kotlin
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"

    // UI - Design
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Glide Image
    implementation "com.github.bumptech.glide:glide:4.13.0"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}